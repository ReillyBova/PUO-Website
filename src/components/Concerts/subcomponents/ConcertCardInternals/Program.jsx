// Library imports
import React from 'react';
import PropTypes from 'prop-types';
// UI imports
import CardActions from '@material-ui/core/CardActions';
import CardContent from '@material-ui/core/CardContent';
import Typography from '@material-ui/core/Typography';
// Local imports
import { HistoryButtons, UpcomingButtons } from './';

// Returns the architecture of the program based on cardLayoutIndex
const Program = ({
    buttonLinks,
    cardLayoutIndex,
    classes,
    concertName,
    isUpcoming,
    program,
}) => {
    const {
        buttonWrapper,
        concertDetails,
        mobileConcertName,
        mobileConcertNameRibbon,
        programContent,
    } = classes;

    return (
        <div className={concertDetails}>
            {cardLayoutIndex === 1 && (
                // Special tablet ribbon for layering under spaced mobile ribbon
                <div className={mobileConcertNameRibbon}>
                    <Typography variant='h4'>
                        <br />
                    </Typography>
                </div>
            )}
            {cardLayoutIndex < 2 && (
                // Mobile ribbon
                <div className={mobileConcertName}>
                    <Typography variant='h4'>{concertName}</Typography>
                </div>
            )}
            <CardContent className={programContent}>{program}</CardContent>
            <CardActions disableSpacing className={buttonWrapper}>
                {isUpcoming ? (
                    <UpcomingButtons {...buttonLinks} />
                ) : (
                    <HistoryButtons {...buttonLinks} />
                )}
            </CardActions>
        </div>
    );
};

Program.propTypes = {
    buttonLinks: PropTypes.object, // Link props for the "Buttons" element
    cardLayoutIndex: PropTypes.number, // In range [0,2]; indicates screen width
    classes: PropTypes.object, // Styling classes generated by parent
    concertName: PropTypes.string, // Concert generic title (e.g. Fall Concert)
    isUpcoming: PropTypes.bool, // True if concert is not yet "history"
    program: PropTypes.array, // JSX for the parsed and readable concert program
};

export default Program;
